---
---

<section class="py-16 bg-gray-900 text-white relative">
  <div class="container mx-auto px-4 text-center">
    <h2 id="newsletter" class="text-4xl font-bold mb-4">Join Our Newsletter</h2>
    <p class="text-gray-400 mb-8 max-w-2xl mx-auto">
      Stay updated with our latest games, dev blogs, videos, and exclusive behind-the-scenes content delivered straight to your inbox.
    </p>
    
    <form id="newsletter-form" class="max-w-2xl mx-auto space-y-4">
      <div>
        <input 
          type="text" 
          id="name" 
          name="name" 
          placeholder="Your Name (optional)" 
          class="w-full p-3 rounded bg-gray-800 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:border-purple-500"
        />
      </div>
      <div class="relative">
        <input 
          type="email" 
          id="email" 
          name="email" 
          placeholder="Your Email Address" 
          required
          class="w-full p-3 rounded bg-gray-800 border border-gray-700 text-white placeholder-gray-500 focus:outline-none focus:border-purple-500"
        />
        <button 
          type="submit"
          class="absolute right-2 top-1/2 -translate-y-1/2 bg-purple-600 text-white px-6 py-2 rounded hover:bg-purple-700 transition-colors duration-300"
        >
          Subscribe
        </button>
      </div>
    </form>
    
    <p id="subscription-message" class="mt-4 text-green-400 hidden">
      Stay tuned for our first newsletter!
    </p>
  </div>
</section>

<script>
  interface SubscribeResponse {
    success: boolean;
    message: string;
  }

  const mockSubscribeAPI = async (email: string, name?: string): Promise<SubscribeResponse> => {
    // Simulate API call delay
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // Mock validation and response
    if (!email.includes('@')) {
      throw new Error('Invalid email address');
    }
    
    // Simulate successful response
    return {
      success: true,
      message: 'Successfully subscribed to newsletter!'
    };
  };

  const form = document.getElementById('newsletter-form') as HTMLFormElement;
  const message = document.getElementById('subscription-message') as HTMLParagraphElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const emailInput = form.querySelector('#email') as HTMLInputElement;
    const nameInput = form.querySelector('#name') as HTMLInputElement;
    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    
    try {
      // Disable form while processing
      submitButton.disabled = true;
      submitButton.textContent = 'Subscribing...';
      
      const response = await mockSubscribeAPI(emailInput.value, nameInput.value);
      
      if (response.success) {
        message.textContent = response.message;
        message.classList.remove('hidden', 'text-red-400');
        message.classList.add('text-green-400');
        form.reset();
      }
    } catch (error) {
      message.textContent = error instanceof Error ? error.message : 'An error occurred. Please try again.';
      message.classList.remove('hidden', 'text-green-400');
      message.classList.add('text-red-400');
    } finally {
      // Re-enable form
      submitButton.disabled = false;
      submitButton.textContent = 'Subscribe';
      message.classList.remove('hidden');
    }
  });
</script>