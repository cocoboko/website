---
import Layout from './Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

interface Props {
    gameData: {
        title: string;
        projectKey: string;
        status: string;
        description: string;
        imageURL: string;
    };
}

type BlogPost = CollectionEntry<'blog'>;
const { gameData } = Astro.props;

const posts = await getCollection('blog');
const devlogPosts = posts
    .filter((post: BlogPost) => 
        post.data.category === 'devlog' && 
        post.data.tags?.includes(gameData.projectKey)
    )
    .sort((a: BlogPost, b: BlogPost) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Layout title={gameData.title}>
    <Navigation />
    <main class="container mx-auto px-4 py-8">
        <div class="mb-8">
            <h1 class="text-4xl font-bold mb-4">{gameData.title}</h1>
            <div class="relative w-full h-96 mb-4">
                <img
                    src={gameData.imageURL}
                    alt={`${gameData.title} game banner`}
                    class="object-cover w-full h-full rounded-lg"
                />
            </div>
            <div class="bg-purple-100 text-purple-800 px-4 py-2 rounded-md inline-block mb-4">
                {gameData.status}
            </div>
            <p class="text-lg mb-8">{gameData.description}</p>
        </div>

        {devlogPosts.length > 0 && (
            <div class="mt-12">
                <h2 class="text-3xl font-bold mb-6">Development Updates</h2>
                <div class="space-y-8">
                    {devlogPosts.map((post: BlogPost) => (
                        <article class="border-b border-gray-200 pb-8">
                            <h3 class="text-2xl font-semibold mb-2">
                                <a href={`/blog/${post.slug}`} class="hover:text-purple-600 transition-colors">
                                    {post.data.title}
                                </a>
                            </h3>
                            <div class="text-gray-600 mb-2">
                                {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                                    year: 'numeric',
                                    month: 'long',
                                    day: 'numeric'
                                })}
                            </div>
                            <p class="text-gray-700">{post.data.description}</p>
                        </article>
                    ))}
                </div>
            </div>
        )}
    </main>
    <Footer />
</Layout>
